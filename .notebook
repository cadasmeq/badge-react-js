¿Que es un componente?

Bloques de construcción, las aplicaciones hechas en react son como figuras
de Lego. JUnta varias piezas (los componentes) y pueden construir un website
tan pequeño o tan grande como quieras.

Componente vs Elemento

Un elemento es a un objecto como un componente es a una clase.
Si el elemento fuera una casa, el componente serían los planos de arquitectura
de la casa.

Identificación de componentes

Dos preguntas guías:
- ¿Qué elementos se repiten?
- ¿Qué elementos cumplen una función muy específica?

Elementos con una función específica
 - Sirven para encapsular lógica.
 - Permiten juntar muchos comportamientos y aspectos visuales en un solo lugar.

 Identificar componentes es una habilidad escencial para desarrollar aplicaciones React.

 En React, los componentes son un componente principal para el desarrollo frontend.


 Manejo de Estados
 
 Existen maneras en que los componentes pueden producir su propia información y guardarla para ser consumida o pasada a otros componentes a travpes de sus props. La clave está en que la información del state a otros componentes pasará en una sola dirección y podrá ser consumida pero no modificada.

 * Para guardar la información en el estado se usa una función de la clase component llamada setState a la cual se le debe pasar un objeto con la información que se quiere guardar.

 * Aunque no se ve, la información está siendo guardada en dos sitios, Cada input guarda su propio valor y al tiempo está guardando en setState, lo cual no es ideal. Para solucionarlo hay que modificar los inputs de un estado de no controlados a controlados.

 Levantamiento del Estados
 
 Levantar el estado es una técnica de React que pone el estado en una localización donde se pueda pasar como propos a los componentes. LO ideal es poner el estado en el lugar más cercano a todos los componmentes que quieren compartir esa información.

 Algo interesante que le da el nombrre a reactes su parte de "reactividad", ya que cada vez que hay un cambio en el estado o en los props que recibe un componente se vuelve a renderizar todo el componente y todos sus descendientes.


# Introducción a React Router

Las aplicacione que se trabajan en React son llamadas Single Page Apps. Esto es posible gracias a React Router que es una librería Open Source.

Multi Page Apps: Cada página implica una petición al servidor. La respuesta usualmente tiene todo el contenido de la página.

Single Page Apps (SPA): Las aplicaciones que cargan en una sola página de HTML y cualquier actualización la hacen re-escribiendo el HTML que ya tenían.

React Router (v4) : Nos da las herramientas para poder hacer SPA fácilmente. Usaremos 4 componentes:
    - BrowserRouter: Es un componente que debe estar siempre en lo más arriba de la aplicación. Todo lo que esté dentro funcionará como una SPA.
    - Route: CUando hay un match con el path, se hace el render del componente. El component va a recibir tres props: match, history, location.
    - Switch: Dentro de Switch solamente van elementos de Route. Switch se asegura que solamente un Route se renderize.
    - Link: Toma el lugar del elemento <a>, evita que se recargue la página completamente y actualiza la URL.
